import type { ISanivaliDef } from './types';
import type { ISanivaliDefMap } from './types';
export declare const defaultDefs: ISanivaliDefMap;
export declare const addDef: <Key extends string = "type" | "emptyToNull" | "valid" | "invalid" | "parseInt" | "parseFloat" | "finite" | "integer" | "safeInteger" | "trim" | "trimLeft" | "trimRight" | "trimToNull" | "toLocaleLowerCase" | "toLocaleUpperCase" | "toLowerCase" | "toUpperCase" | "toDate" | "toTimestamp" | "removeDuplicateItems" | "uniqueItems" | "sanitize" | "validate" | "items" | "properties" | "allOf" | "anyOf" | "not" | "ifElse" | "default" | "toConst" | "instance" | "const" | "enum" | "minimum" | "exclusiveMinimum" | "maximum" | "exclusiveMaximum" | "minLength" | "maxLength" | "pattern" | "filterItems" | "removeItems" | "minItems" | "maxItems" | "defaultProperties" | "filterProperties" | "deleteProperties" | "required" | "notEmpty" | "minProperties" | "maxProperties" | "dependencies">(name: Key, def: ISanivaliDef) => void;
//# sourceMappingURL=defaultDefs.d.ts.map